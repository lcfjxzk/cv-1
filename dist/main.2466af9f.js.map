{"version":3,"sources":["main.js"],"names":["html","document","querySelector","style","string","string2","n","step","setTimeout","innerHTML","substring","window","scrollTo","length"],"mappings":";AAAA,IAAIA,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASC,cAAc,UAC/BE,EAAJ,4xCA+DIC,EAAU,GAKVC,EAAI,EAIJC,EAAO,SAAPA,IAEFC,WAAW,WAMS,OAAdJ,EAAOE,GAETD,GAAW,OACY,MAAdD,EAAOE,GAEhBD,GAAW,QAEXA,GAAWD,EAAOE,GAEpBN,EAAKS,UAAYJ,EACjBF,EAAMM,UAAYL,EAAOM,UAAU,EAAGJ,GACtCK,OAAOC,SAAS,EAAG,OACnBZ,EAAKY,SAAS,EAAG,OAGbN,EAAIF,EAAOS,OAAS,IAGtBP,GAAK,EACLC,MAID,KAGLA","file":"main.2466af9f.js","sourceRoot":"..\\src","sourcesContent":["let html = document.querySelector(\"#html\"); //qs的含义，通过CSS选择器找到这个元素demo\r\nlet style = document.querySelector(\"#style\");\r\nlet string = `/*你好，我叫熊仲轲\r\n*接下来我演示一下我的前端功底\r\n*首先我要准备一个div\r\n*/\r\n\r\n#div1{\r\n    border: 1px solid red;\r\n    width:200px;\r\n    height:200px;\r\n}\r\n/* 接下来我把 div 变成一个八卦图\r\n* 注意看好了\r\n* 首先，把 div 变成一个圆\r\n*/\r\n#div1{\r\n  border-radius: 50%;\r\n  box-shadow: 0 0 3px rgba(0,0,0,0.5);\r\n  border:none;\r\n}\r\n/* 八卦是阴阳形成的\r\n* 一黑一白\r\n**/\r\n#div1{  \r\n  background: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\r\n}\r\n/*网址：https://cssgradient.io/*/\r\n/*\r\n#div1::before{\r\n  content: '1';\r\n  display: block;\r\n  border: 1px solid red;\r\n}\r\n#div1::after{\r\n  content: '2';\r\n  display: block;\r\n  border: 1px solid red;\r\n}\r\n以上为伪元素:css加上一个元素，相当于HTML里面span元素，所以称为伪元素*/\r\n\r\n/*加两个神秘的小球*/\r\n#div1::before{\r\n  width: 100px;\r\n  height: 100px;\r\n  top: 0;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background: #000;\r\n  border-radius: 50%;\r\n  background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 25%, rgba(0,0,0,1) 25%, rgba(0,0,0,1) 100%);\r\n}\r\n#div1::after{\r\n  width: 100px;\r\n  height: 100px;\r\n  bottom: 0;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background: #fff;\r\n  border-radius: 50%;\r\n  background: radial-gradient(circle, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 25%, rgba(255,255,255,1) 25%, rgba(255,255,255,1) 100%);\r\n  /*网址：https://cssgradient.io/-->Radial*/\r\n}\r\n`;\r\n\r\nlet string2 = \"\";\r\n\r\n//string = string.replace(/\\n/g, \"<br>\");//-->因为会导致有'<',所以放弃，用string2\r\n//replace只会把第一个空格变为回车，所以要用到正则表达式'/\\n/g'，把所有空格替换为回车\r\n//console.log(string.length);\r\nlet n = 0;\r\n//第4次尝试决定用string2\r\n//尝试3-->demo.innerHTML = string.substring(0, n); //在demo上写字，因为会导致有'<',所以放弃，用string2\r\n//尝试2-->demo.innerHTML = string[n];//依次同一个位置显示文字\r\nlet step = () => {\r\n  //console.log(\"1秒后把n加1并显示\");\r\n  setTimeout(() => {\r\n    //尝试6-->解决缩进的问题。在HTML里面，你写的多个空格会变成一个空格，这样缩进就有问题。\r\n    //string2 += string[n] === \"\\n\" ? \"<br>\" : string[n];\r\n\r\n    //尝试5-->把下面的if else语句改为更简洁的问号冒号表达式“表达式 1？表达式 2：表达式 3”\r\n    //string2 += (string[n] === \"\\n\" ? \"<br>\" : string[n]);\r\n    if (string[n] === \"\\n\") {\r\n      //如果是回车，就不照搬\r\n      string2 += \"<br>\"; //在HTML里面回车要表示为\"<br>\"\r\n    } else if (string[n] === \" \") {\r\n      //如果不是回车就照搬\r\n      string2 += \"&nbsp\"; //在HTML里面空格要表示为\"&nbsp\"\r\n    } else {\r\n      string2 += string[n];\r\n    }\r\n    html.innerHTML = string2; //在html上操作demo\r\n    style.innerHTML = string.substring(0, n);\r\n    window.scrollTo(0, 99999); //pc端js控制滚动条位置\r\n    html.scrollTo(0, 99999); //手机端js控制滚动条位置\r\n    //length 55\r\n    //demo.innerHTML = string.substring(0, n); //获取string的第0到第n个\r\n    if (n < string.length - 1) {\r\n      //n=53\r\n      //不是最后一个\r\n      n += 1; //54\r\n      step();\r\n    } else {\r\n      //n 是最后一个\r\n    }\r\n  }, 30);\r\n};\r\n\r\nstep(); //在写css代码的时候，把这个step注释掉\r\n//用setTimeout模拟setInterval，好处是可以随时停止。\r\n\r\n//尝试1-->-------老手不用以下代码------\r\n//setInterval(() => {\r\n//n = n + 1;\r\n//demo.innerHTML = n;\r\n//}, 1000); //3000ms之后再执行'demo.innerHTML = n'\r\n//setTimeout3000ms后响应一次，setInterval每3000ms响应一次。\r\n\r\n// setTimeout(() => {\r\n//   style.innerHTML = `\r\n// body{\r\n//   color: red;\r\n// }\r\n// `;\r\n// }, 3000);\r\n"]}